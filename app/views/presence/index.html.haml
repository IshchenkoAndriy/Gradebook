- breadcrumb :presences, @lesson
= render 'application/breadcrumb', breadcrumb_wrapper_class: ''

- if @presences and not @presences.empty?
  %table.table.table-hover
    %tr
      %th= t('presence_table.student')
      %th= t('presence_table.presence')
      %th= t('presence_table.module')
      %th= t('presence_table.actions')
    - @presences.each do |presence|
      %tr{:class => presence.was_present ? 'success' : 'error' }
        %td= presence.student.full_name
        %td= presence.was_present ? t('presence_states.present_title') : t('presence_states.absent_title')
        %td= presence.module
        %td
          -# Button to trigger modal
          = link_to content_tag( :i, '', :class => 'icon-pencil' ), "#editPresenceModal#{presence.id}", {'data-toggle' => 'modal'}

          -# Modal
          .modal.hide.fade{:id => "editPresenceModal#{presence.id}", :tabindex => '-1', :role => 'dialog', 'aria-labelledby' => 'myModalLabel',
            'aria-hidden' => 'true'}
            .modal-header
              %button{:type => 'button', :class => 'close', 'data-dismiss' => 'modal', 'aria-hidden' => 'true'}= '×'
              %h3= t('edit_presence_title')
            .modal-body
              = render 'presence/form', :presence => presence

          = link_to content_tag( :i, '', :class => 'icon-trash' ), lesson_presence_path(@lesson, presence), :confirm => t('presence_destroy_confirm'), :method => :delete

- else
  %h4.horizontal_centered= t('no_presence_title')

-# Button to trigger modal
= link_to t('new_presence_title'), '#createPresenceModal', {:class => 'btn', 'data-toggle' => 'modal'}

-# Modal
.modal.hide.fade{:id => 'createPresenceModal', :tabindex => '-1', :role => 'dialog', 'aria-labelledby' => 'myModalLabel',
  'aria-hidden' => 'true'}
  .modal-header
    %button{:type => 'button', :class => 'close', 'data-dismiss' => 'modal', 'aria-hidden' => 'true'}= '×'
    %h3= t('new_presence_title')
  .modal-body
    = render 'presence/form', :presence => @lesson.presences.new